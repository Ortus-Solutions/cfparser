/*===TOKENS===*/
COMPONENT                <component>
'{'                      <{>
Hidden:NEWLINE                  <>
FUNCTION                 <function>
IDENTIFIER               <foo>
'('                      <(>
')'                      <)>
'{'                      <{>
Hidden:NEWLINE                  <>
ADMIN                    <admin>
IDENTIFIER               <action>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <getRegional>
CLOSE_STRING             <">
IDENTIFIER               <type>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <test>
CLOSE_STRING             <">
IDENTIFIER               <password>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <test>
CLOSE_STRING             <">
IDENTIFIER               <returnVariable>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <rtn>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
RETURN                   <return>
IDENTIFIER               <returnVariable>
';'                      <;>
Hidden:NEWLINE                  <>
'}'                      <}>
Hidden:NEWLINE                  <>
'}'                      <}>
Hidden:NEWLINE                  <>
/*===TREE===*/
(scriptBlock
  (componentDeclaration
    component
    (componentGuts
      {
      (element
        (functionDeclaration
          function
          (identifier foo)
          (
          parameterList
          )
          (compoundStatement
            {
            (statement
              (tagOperatorStatement
                (adminStatement
                  admin
                  (paramStatementAttributes
                    (param
                      (multipartIdentifier (identifier action))
                      =
                      (startExpression
                        (baseExpression
                          (unaryExpression
                            (primaryExpression
                              (literalExpression (stringLiteral " (stringLiteralPart getRegional) "))
                            )
                          )
                        )
                      )
                    )
                    (param
                      (multipartIdentifier (identifier type))
                      =
                      (startExpression
                        (baseExpression
                          (unaryExpression
                            (primaryExpression
                              (literalExpression (stringLiteral " (stringLiteralPart test) "))
                            )
                          )
                        )
                      )
                    )
                    (param
                      (multipartIdentifier (identifier password))
                      =
                      (startExpression
                        (baseExpression
                          (unaryExpression
                            (primaryExpression
                              (literalExpression (stringLiteral " (stringLiteralPart test) "))
                            )
                          )
                        )
                      )
                    )
                    (param
                      (multipartIdentifier (identifier returnVariable))
                      =
                      (startExpression
                        (baseExpression
                          (unaryExpression
                            (primaryExpression
                              (literalExpression (stringLiteral " (stringLiteralPart rtn) "))
                            )
                          )
                        )
                      )
                    )
                  )
                  (endOfStatement ;)
                )
              )
            )
            (statement
              (returnStatement
                return
                (anExpression
                  (startExpression
                    (baseExpression
                      (unaryExpression (memberExpression (identifier returnVariable)))
                    )
                  )
                )
              )
              (endOfStatement ;)
            )
            }
          )
        )
      )
      }
    )
  )
)
/*======*/
/*===DECOMPILE===*/
component {
  public function foo()     {
admin action='getRegional' password='test' returnVariable='rtn' type='test';
      return returnVariable;

    }
}
/*======*/