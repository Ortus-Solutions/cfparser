/*===TOKENS===*/
THROW                    <throw>
';'                      <;>
Hidden:NEWLINE                  <>
THROW                    <throw>
OPEN_STRING              <">
STRING_LITERAL           <some amazing error>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
THROW                    <throw>
'('                      <(>
OPEN_STRING              <">
STRING_LITERAL           <woohoo>
CLOSE_STRING             <">
')'                      <)>
';'                      <;>
Hidden:NEWLINE                  <>
THROW                    <throw>
'('                      <(>
IDENTIFIER               <type>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <wow>
CLOSE_STRING             <">
','                      <,>
IDENTIFIER               <message>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <that escalated quickly>
CLOSE_STRING             <">
')'                      <)>
';'                      <;>
/*===TREE===*/
(scriptBlock
  (element
    (statement (tagOperatorStatement (throwStatement throw (endOfStatement ;))))
  )
  (element
    (statement
      (tagOperatorStatement
        (throwStatement
          throw
          (stringLiteral " (stringLiteralPart some amazing error) ")
          (endOfStatement ;)
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (throwStatement
          throw
          (memberExpression
            (parentheticalExpression
              (
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart woohoo) "))
                    )
                  )
                )
              )
              )
            )
          )
          (endOfStatement ;)
        )
      )
    )
  )
  (element
    (statement
      (startExpression
        (baseExpression
          (unaryExpression
            (memberExpression
              (functionCall
                (identifier throw)
                (
                (argumentList
                  (argument
                    (argumentName (identifier type))
                    =
                    (startExpression
                      (baseExpression
                        (unaryExpression
                          (primaryExpression
                            (literalExpression (stringLiteral " (stringLiteralPart wow) "))
                          )
                        )
                      )
                    )
                  )
                  ,
                  (argument
                    (argumentName (identifier message))
                    =
                    (startExpression
                      (baseExpression
                        (unaryExpression
                          (primaryExpression
                            (literalExpression
                              (stringLiteral " (stringLiteralPart that escalated quickly) ")
                            )
                          )
                        )
                      )
                    )
                  )
                )
                )
              )
            )
          )
        )
      )
      ;
    )
  )
)
/*======*/
/*===DECOMPILE===*/
{
throw;
throw 'some amazing error';
throw ('woohoo');
throw(type = 'wow', message = 'that escalated quickly');

}
/*======*/