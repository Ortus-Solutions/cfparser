/*===TOKENS===*/
LOG                      <log>
IDENTIFIER               <text>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <Event Gateway>
'#'                      <#>
IDENTIFIER               <variables>
'.'                      <.>
IDENTIFIER               <id>
'#'                      <#>
STRING_LITERAL           <started>
CLOSE_STRING             <">
FILE                     <file>
'='                      <=>
IDENTIFIER               <this>
'.'                      <.>
IDENTIFIER               <logfile>
';'                      <;>
Hidden:NEWLINE                  <>
LOG                      <log>
Hidden:NEWLINE                  <>
IDENTIFIER               <text>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <text>
CLOSE_STRING             <">
Hidden:NEWLINE                  <>
IDENTIFIER               <type>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <information>
CLOSE_STRING             <">
Hidden:NEWLINE                  <>
IDENTIFIER               <application>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <yes>
CLOSE_STRING             <">
Hidden:NEWLINE                  <>
FILE                     <file>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <filename>
CLOSE_STRING             <">
Hidden:NEWLINE                  <>
LOG                      <log>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <log type>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
LOG                      <log>
IDENTIFIER               <text>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <Event Gateway>
'#'                      <#>
IDENTIFIER               <variables>
'.'                      <.>
IDENTIFIER               <id>
'#'                      <#>
STRING_LITERAL           <error:>
'#'                      <#>
IDENTIFIER               <ex>
'.'                      <.>
IDENTIFIER               <message>
'#'                      <#>
CLOSE_STRING             <">
FILE                     <file>
'='                      <=>
IDENTIFIER               <this>
'.'                      <.>
IDENTIFIER               <logfile>
IDENTIFIER               <type>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <error>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
PARAM                    <param>
IDENTIFIER               <name>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <url.age>
CLOSE_STRING             <">
IDENTIFIER               <type>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <numeric>
CLOSE_STRING             <">
DEFAULT                  <default>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <10>
CLOSE_STRING             <">
IDENTIFIER               <max>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <100>
CLOSE_STRING             <">
IDENTIFIER               <min>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <18>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
Hidden:LINE_COMMENT             <//How about cfhttp ?>
HTTP                     <http>
IDENTIFIER               <method>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <GET>
CLOSE_STRING             <">
IDENTIFIER               <url>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <http://www.google.com>
CLOSE_STRING             <">
IDENTIFIER               <result>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <webPage>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
MAIL                     <mail>
IDENTIFIER               <from>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <Mark@getrailo.com>
CLOSE_STRING             <">
TO                       <to>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <gert@getrailo.com>
CLOSE_STRING             <">
IDENTIFIER               <subject>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <Awesome! Tags in Script!>
CLOSE_STRING             <">
'{'                      <{>
Hidden:NEWLINE                  <>
IDENTIFIER               <WriteOutput>
'('                      <(>
OPEN_STRING              <">
STRING_LITERAL           <Hey Gert!
Check out the code samples here! You can write tags in CFScript
Mark>
CLOSE_STRING             <">
')'                      <)>
';'                      <;>
Hidden:NEWLINE                  <>
'}'                      <}>
Hidden:NEWLINE                  <>
DIRECTORY                <directory>
IDENTIFIER               <name>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <dir>
CLOSE_STRING             <">
DIRECTORY                <directory>
'='                      <=>
IDENTIFIER               <dir>
IDENTIFIER               <action>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <list>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
Hidden:LINE_COMMENT             <//Query a database>
QUERY                    <query>
IDENTIFIER               <name>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <getUsers>
CLOSE_STRING             <">
IDENTIFIER               <dataSource>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <myDatasource>
CLOSE_STRING             <">
'{'                      <{>
Hidden:NEWLINE                  <>
IDENTIFIER               <echo>
'('                      <(>
OPEN_STRING              <">
STRING_LITERAL           <SELECT * FROM tusers WHERE UserID =>
CLOSE_STRING             <">
')'                      <)>
';'                      <;>
Hidden:NEWLINE                  <>
QUERYPARAM               <queryparam>
IDENTIFIER               <cfsqltype>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <varchar>
CLOSE_STRING             <">
IDENTIFIER               <value>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <6300EE15-1320-5CC2-F9F48B9DBBA54D9F>
CLOSE_STRING             <">
';'                      <;>
Hidden:NEWLINE                  <>
'}'                      <}>
Hidden:NEWLINE                  <>
IDENTIFIER               <dump>
'('                      <(>
IDENTIFIER               <getUsers>
')'                      <)>
';'                      <;>
/*===TREE===*/
(scriptBlock
  (element
    (statement
      (tagOperatorStatement
        (cfmlfunctionStatement
          (cfmlFunction log)
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier text))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression
                        (stringLiteral
                          "
                          (stringLiteralPart 'Event Gateway ')
                          #
                          (anExpression
                            (startExpression
                              (baseExpression
                                (unaryExpression (memberExpression (identifier variables) . (identifier id)))
                              )
                            )
                          )
                          #
                          (stringLiteralPart ' started')
                          "
                        )
                      )
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier (cfmlFunction file)))
              =
              (startExpression
                (baseExpression
                  (unaryExpression (memberExpression (identifier this) . (identifier logfile)))
                )
              )
            )
          )
          ;
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (cfmlfunctionStatement
          (cfmlFunction log)
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier text))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart text) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier type))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart information) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier application))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart yes) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier (cfmlFunction file)))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart filename) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier (cfmlFunction log)))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart log type) "))
                    )
                  )
                )
              )
            )
          )
          ;
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (cfmlfunctionStatement
          (cfmlFunction log)
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier text))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression
                        (stringLiteral
                          "
                          (stringLiteralPart 'Event Gateway ')
                          #
                          (anExpression
                            (startExpression
                              (baseExpression
                                (unaryExpression (memberExpression (identifier variables) . (identifier id)))
                              )
                            )
                          )
                          #
                          (stringLiteralPart ' error: ')
                          #
                          (anExpression
                            (startExpression
                              (baseExpression
                                (unaryExpression (memberExpression (identifier ex) . (identifier message)))
                              )
                            )
                          )
                          #
                          "
                        )
                      )
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier (cfmlFunction file)))
              =
              (startExpression
                (baseExpression
                  (unaryExpression (memberExpression (identifier this) . (identifier logfile)))
                )
              )
            )
            (param
              (multipartIdentifier (identifier type))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart error) "))
                    )
                  )
                )
              )
            )
          )
          ;
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (paramStatement
          param
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier name))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart url.age) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier type))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart numeric) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier default))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart 10) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier max))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart 100) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier min))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart 18) "))
                    )
                  )
                )
              )
            )
          )
          ;
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (cfmlfunctionStatement
          (cfmlFunction http)
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier method))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart GET) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier url))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression
                        (stringLiteral " (stringLiteralPart http://www.google.com) ")
                      )
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier result))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart webPage) "))
                    )
                  )
                )
              )
            )
          )
          ;
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (cfmlfunctionStatement
          (cfmlFunction mail)
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier from))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart Mark@getrailo.com) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier to))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart gert@getrailo.com) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier subject))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression
                        (stringLiteral " (stringLiteralPart Awesome! Tags in Script!) ")
                      )
                    )
                  )
                )
              )
            )
          )
          (compoundStatement
            {
            (statement
              (startExpression
                (baseExpression
                  (unaryExpression
                    (memberExpression
                      (functionCall
                        (identifier WriteOutput)
                        (
                        (argumentList
                          (argument
                            (startExpression
                              (baseExpression
                                (unaryExpression
                                  (primaryExpression
                                    (literalExpression
                                      (stringLiteral
                                        "
                                        (stringLiteralPart
                                          Hey Gert!\r\nCheck out the code samples here! You can write tags in CFScript\r\nMark\r\n
                                        )
                                        "
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        )
                      )
                    )
                  )
                )
              )
              ;
            )
            }
          )
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (cfmlfunctionStatement
          (cfmlFunction directory)
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier name))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart dir) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier (cfmlFunction directory)))
              =
              (startExpression
                (baseExpression (unaryExpression (memberExpression (identifier dir))))
              )
            )
            (param
              (multipartIdentifier (identifier action))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart list) "))
                    )
                  )
                )
              )
            )
          )
          ;
        )
      )
    )
  )
  (element
    (statement
      (tagOperatorStatement
        (cfmlfunctionStatement
          (cfmlFunction query)
          (paramStatementAttributes
            (param
              (multipartIdentifier (identifier name))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart getUsers) "))
                    )
                  )
                )
              )
            )
            (param
              (multipartIdentifier (identifier dataSource))
              =
              (startExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (literalExpression (stringLiteral " (stringLiteralPart myDatasource) "))
                    )
                  )
                )
              )
            )
          )
          (compoundStatement
            {
            (statement
              (startExpression
                (baseExpression
                  (unaryExpression
                    (memberExpression
                      (functionCall
                        (identifier echo)
                        (
                        (argumentList
                          (argument
                            (startExpression
                              (baseExpression
                                (unaryExpression
                                  (primaryExpression
                                    (literalExpression
                                      (stringLiteral " (stringLiteralPart SELECT * FROM tusers WHERE UserID =) ")
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                        )
                      )
                    )
                  )
                )
              )
              ;
            )
            (statement
              (tagOperatorStatement
                (cfmlfunctionStatement
                  (cfmlFunction queryparam)
                  (paramStatementAttributes
                    (param
                      (multipartIdentifier (identifier cfsqltype))
                      =
                      (startExpression
                        (baseExpression
                          (unaryExpression
                            (primaryExpression
                              (literalExpression (stringLiteral " (stringLiteralPart varchar) "))
                            )
                          )
                        )
                      )
                    )
                    (param
                      (multipartIdentifier (identifier value))
                      =
                      (startExpression
                        (baseExpression
                          (unaryExpression
                            (primaryExpression
                              (literalExpression
                                (stringLiteral " (stringLiteralPart 6300EE15-1320-5CC2-F9F48B9DBBA54D9F) ")
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                  ;
                )
              )
            )
            }
          )
        )
      )
    )
  )
  (element
    (statement
      (startExpression
        (baseExpression
          (unaryExpression
            (memberExpression
              (functionCall
                (identifier dump)
                (
                (argumentList
                  (argument
                    (startExpression
                      (baseExpression (unaryExpression (memberExpression (identifier getUsers))))
                    )
                  )
                )
                )
              )
            )
          )
        )
      )
      ;
    )
  )
)
/*======*/
/*===DECOMPILE===*/
{
log file=this.logfile text='Event Gateway #variables.id# started';;
log application='yes' file='filename' log='log type' text='text' type='information';;
log file=this.logfile text='Event Gateway #variables.id# error: #ex.message#' type='error';;
param default='10' max='100' min='18' name='url.age' type='numeric';
http method='GET' result='webPage' url='http://www.google.com';;
mail from='Mark@getrailo.com' subject='Awesome! Tags in Script!' to='gert@getrailo.com'{
WriteOutput('Hey Gert!
Check out the code samples here! You can write tags in CFScript
Mark
');

};
directory action='list' directory=dir name='dir';;
query dataSource='myDatasource' name='getUsers'{
echo('SELECT * FROM tusers WHERE UserID =');
queryparam cfsqltype='varchar' value='6300EE15-1320-5CC2-F9F48B9DBBA54D9F';;

};
dump(getUsers);

}
/*======*/